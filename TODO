Iteration 1:
  *Valid programs consist only of literal integers and return values.*
  ✔ Allow typecheck error messages to be passed through. @done(20-05-26 20:37)
  ✔ Write some initial tests for basic C files. @done(20-05-26 21:57)
  ✔ Read the LLVM language tutorial. @done(20-05-27 20:30)
  ✔ Implemented LLVM codegen for basic C files. @done(20-05-27 20:30)
  ☐ Figure out why the tests directory is causing a linker error with LLVM.
  ✔ Allow bitcode to be output to a file. @done(20-05-27 20:47)

Iteration 2:
  *Add variable bindings and the ability to initialize and return integers.*
  ✔ Add local variable bindings to AST. @done(20-05-31 13:26)
  ✔ Add the typing of local variable bindings to the typechecker. @done(20-05-31 13:26)
  ✔ Add code generation for local variable bindings. @done(20-05-31 13:26)
  ✔ Add global variable bindings to AST. @done(20-05-31 14:42)
  ✔ Add typing of global variables to the typechecker @done(20-05-31 14:42)
  ✔ Add code generation for global variables. @done(20-05-31 14:43)

Iteration 3:
  *Add assignment (the ability to assign variables to other values).*
  ✔ Add assignment statement type to AST. @done(20-06-05 10:42)
  ✔ Add typechecking assignment statements. @done(20-06-05 10:52)
  ✔ Add code generation for assignment statements. @done(20-06-05 10:52)

Iteration 4:
  *This is a cleanup iteration for creating a testing pipeline.*
  ✔ Add ppx_expect tests for parser @done(20-06-05 11:42)
  ✔ Add ppx_expect tests for typechecker @done(20-06-05 11:48)
  ☐ Add ppx_expect tests for code generator
    This one is a little bit difficult because I am using global variables
    right now. I will come back to it later.
